pipeline{
    agent any
   
    environment{
        PATH = "/opt/maven3/bin:$PATH"
    }
    stages{
        stage("Git Checkout"){
            steps{
                git credentialsId: 'tomcat-new', url: 'https://github.com/SriKanth170195/myweb.git'
            }
        }
        stage("Maven Build"){
            steps{
                sh "mvn clean sonar:sonar package"
                sh "mv target/*.war target/myapp.war"
                
            }
        }
       
stage('Upload War To Nexus'){
            steps{
            
                nexusArtifactUploader artifacts: [
                    [
                     artifactId: 'myweb', 
                        classifier: '',
                         file: 'target/myapp.war', 
                                        type: 'war']
                              ],
                     credentialsId: 'nexus',
                             groupId: 'in.javahome',
                             nexusUrl: '172.31.42.253:8081',
                                 nexusVersion: 'nexus3',
                             protocol: 'http', 
                            repository: 'release',
                             version: '8.2.1'               
              }
            }
       
        stage("deploy-dev"){
            steps{
                sshagent(['tomcat']) {
                sh """
                    scp -o StrictHostKeyChecking=no target/myapp.war  ec2-user@172.31.33.179:/home/ec2-user/apache-tomcat-9.0.68/webapps/
                    
                    ssh ec2-user@172.31.33.179 /home/ec2-user/apache-tomcat-9.0.68/bin/shutdown.sh
                    
                    ssh ec2-user@172.31.33.179 /home/ec2-user/apache-tomcat-9.0.68/bin/startup.sh
                
                """
            }
            
            }
        }
    }
}
